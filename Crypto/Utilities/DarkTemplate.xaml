<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf">
    <!-- COLORS -->

    <SolidColorBrush x:Key="BackgroundTheme" Color="#292929" />
    <SolidColorBrush x:Key="BackgroundTheme2" Color="#1E1E1E" />
    <SolidColorBrush x:Key="ForegroundTheme" Color="#BDBDBD" />
    <SolidColorBrush x:Key="BackgroundItemTheme" Color="#2F2F2F" />
    <SolidColorBrush x:Key="ForegroundItemTheme" Color="#FFFFFF" />


    <!-- STYLES -->

    <Style x:Key="LineColor" TargetType="{x:Type Line}">
        <Setter Property="Stroke" Value="{DynamicResource ForegroundTheme}" />
    </Style>

    <Style x:Key="BorderTheme" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource BackgroundTheme}" />
    </Style>

    <Style x:Key="NavBorder" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{DynamicResource BackgroundTheme2}" />
    </Style>

    <Style x:Key="Btn" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTheme}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundTheme}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="Arial Black" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Margin" Value="0,0,10,0" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10, 10, 10, 10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ForegroundTheme}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundTheme}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="NavBtn" TargetType="{x:Type RadioButton}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="190" />
        <Setter Property="Background" Value="{DynamicResource BackgroundTheme2}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTheme}" />
        <Setter Property="FontFamily" Value="Tahoma" />
        <Setter Property="FontSize" Value="16" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0, 10, 10, 0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ForegroundTheme}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundTheme2}" />
            </Trigger>

            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource ForegroundTheme}" />
                <Setter Property="Foreground" Value="{DynamicResource BackgroundTheme2}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="Text" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontFamily" Value="Yu Gothic UI Semibold" />
        <Setter Property="Foreground" Value="#E0E0E0" />
    </Style>

    <Style x:Key="Text2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontFamily" Value="Yu Gothic UI Semibold" />
        <Setter Property="Foreground" Value="#ABA9A9" />
    </Style>

    <Style x:Key="SwitchColorMode" TargetType="{x:Type ToggleButton}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="20, 20, 20, 20" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTheme}" />
        <Setter Property="FontFamily" Value="Arial Black" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Ellipse x:Name="Mode" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TableData" TargetType="{x:Type ListViewItem}">
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Margin" Value="0, 5, 0, 0" />
        <Setter Property="Height" Value="55" />
        <Setter Property="Background" Value="{DynamicResource BackgroundItemTheme}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundItemTheme}" />

        <!-- <Setter Property="Focusable" Value="False" /> -->
        <!--<Setter Property="IsEnabled" Value="False" /> -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="{DynamicResource BackgroundItemTheme}"/>
                        <SolidColorBrush x:Key="Item.MouseOver.Foreground" Color="{DynamicResource ForegroundItemTheme}"/>
                    </ControlTemplate.Resources>

                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource BackgroundItemTheme}" />
                <Setter Property="Foreground" Value="{DynamicResource ForegroundItemTheme}" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="Table" TargetType="{x:Type ListView}">
        <Setter Property="Padding" Value="15" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#111111" />

    </Style>

    <Style x:Key="Header" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border BorderThickness="1" Background="Transparent">
                        <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5, 5, 5, 0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0, 0, 0, 10" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="#D3D3D3" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style x:Key="SearchBox" TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="200" />
        <Setter Property="Margin" Value="0, 30, 30, 30" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Background" Value="{DynamicResource BackgroundTheme2}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="#858585" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="CurrencyBox" TargetType="{x:Type ComboBox}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="18" />
                        </Grid.ColumnDefinitions>

                        <TextBox x:Name="PART_EditableTextBox" Style="{DynamicResource ComboBoxText}" Height="{TemplateBinding Height}" />
                        <ToggleButton Grid.Column="1" Margin="0" Height="{TemplateBinding Height}" Style="{DynamicResource ComboBoxToggleButton}" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>

                        <Popup Name="Popup"  Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border BorderThickness="1" CornerRadius="5" BorderBrush="Black"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource BackgroundTheme}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTheme}" />
        <Setter Property="Content" Value="6" />
        <Setter Property="FontFamily" Value="Marlett" />
    </Style>

    <Style x:Key="ComboBoxText" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource BackgroundTheme}" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="PriceChart" TargetType="{x:Type lvc:LineSeries}">
        <Setter Property="StrokeThickness" Value="2" />
        <Setter Property="Fill" Value="#7F318F40" />
        <Setter Property="Stroke" Value="#318F40" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundTheme}" />
    </Style>

    <Style x:Key="ChartStyle" TargetType="{x:Type lvc:CartesianChart}">
        <Setter Property="Background" Value="{DynamicResource BackgroundTheme2}" />
    </Style>

</ResourceDictionary>